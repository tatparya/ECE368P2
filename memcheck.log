==8114== Memcheck, a memory error detector
==8114== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==8114== Using Valgrind-3.10.0.SVN and LibVEX; rerun with -h for copyright info
==8114== Command: ./testRadix
==8114== Parent PID: 5072
==8114== 
--8114-- 
--8114-- Valgrind options:
--8114--    --tool=memcheck
--8114--    --leak-check=full
--8114--    --verbose
--8114--    --log-file=memcheck.log
--8114-- Contents of /proc/version:
--8114--   Linux version 3.13.0-44-generic (buildd@lamiak) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #73-Ubuntu SMP Tue Dec 16 00:22:43 UTC 2014
--8114-- Arch and hwcaps: AMD64, amd64-cx16-rdtscp-sse3
--8114-- Page sizes: currently 4096, max supported 4096
--8114-- Valgrind library directory: /usr/lib/valgrind
--8114-- Reading syms from /home/tatparya/Desktop/ECE368/ECE368P2/testRadix
--8114-- Reading syms from /lib/x86_64-linux-gnu/ld-2.19.so
--8114--   Considering /lib/x86_64-linux-gnu/ld-2.19.so ..
--8114--   .. CRC mismatch (computed 4cbae35e wanted 8d683c31)
--8114--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/ld-2.19.so ..
--8114--   .. CRC is valid
--8114-- Reading syms from /usr/lib/valgrind/memcheck-amd64-linux
--8114--   Considering /usr/lib/valgrind/memcheck-amd64-linux ..
--8114--   .. CRC mismatch (computed 37cdde19 wanted adc367dd)
--8114--    object doesn't have a symbol table
--8114--    object doesn't have a dynamic symbol table
--8114-- Scheduler: using generic scheduler lock implementation.
--8114-- Reading suppressions file: /usr/lib/valgrind/default.supp
==8114== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-8114-by-tatparya-on-???
==8114== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-8114-by-tatparya-on-???
==8114== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-8114-by-tatparya-on-???
==8114== 
==8114== TO CONTROL THIS PROCESS USING vgdb (which you probably
==8114== don't want to do, unless you know exactly what you're doing,
==8114== or are doing some strange experiment):
==8114==   /usr/lib/valgrind/../../bin/vgdb --pid=8114 ...command...
==8114== 
==8114== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==8114==   /path/to/gdb ./testRadix
==8114== and then give GDB the following command
==8114==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=8114
==8114== --pid is optional if only one valgrind process is running
==8114== 
--8114-- REDIR: 0x4019ca0 (strlen) redirected to 0x38068331 (???)
--8114-- Reading syms from /usr/lib/valgrind/vgpreload_core-amd64-linux.so
--8114--   Considering /usr/lib/valgrind/vgpreload_core-amd64-linux.so ..
--8114--   .. CRC mismatch (computed 329d6860 wanted c0186920)
--8114--    object doesn't have a symbol table
--8114-- Reading syms from /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so
--8114--   Considering /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so ..
--8114--   .. CRC mismatch (computed 1fb85af8 wanted 2e9e3c16)
--8114--    object doesn't have a symbol table
==8114== WARNING: new redirection conflicts with existing -- ignoring it
--8114--     old: 0x04019ca0 (strlen              ) R-> (0000.0) 0x38068331 ???
--8114--     new: 0x04019ca0 (strlen              ) R-> (2007.0) 0x04c2e1a0 strlen
--8114-- REDIR: 0x4019a50 (index) redirected to 0x4c2dd50 (index)
--8114-- REDIR: 0x4019c70 (strcmp) redirected to 0x4c2f2f0 (strcmp)
--8114-- REDIR: 0x401a9c0 (mempcpy) redirected to 0x4c31da0 (mempcpy)
--8114-- Reading syms from /lib/x86_64-linux-gnu/libc-2.19.so
--8114--   Considering /lib/x86_64-linux-gnu/libc-2.19.so ..
--8114--   .. CRC mismatch (computed 8238e74c wanted 8df065ae)
--8114--   Considering /usr/lib/debug/lib/x86_64-linux-gnu/libc-2.19.so ..
--8114--   .. CRC is valid
--8114-- REDIR: 0x4ec48f0 (strcasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8114-- REDIR: 0x4ec6be0 (strncasecmp) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8114-- REDIR: 0x4ec40c0 (memcpy@GLIBC_2.2.5) redirected to 0x4a25720 (_vgnU_ifunc_wrapper)
--8114-- REDIR: 0x4ec2350 (rindex) redirected to 0x4c2da30 (rindex)
--8114-- REDIR: 0x4ec0650 (strlen) redirected to 0x4c2e0e0 (strlen)
--8114-- REDIR: 0x4ecb650 (strchrnul) redirected to 0x4c319b0 (strchrnul)
--8114-- REDIR: 0x4eba2e0 (malloc) redirected to 0x4c2ab10 (malloc)
--8114-- REDIR: 0x4eba980 (free) redirected to 0x4c2bd80 (free)
==8114== Use of uninitialised value of size 8
==8114==    at 0x400C01: main (testRadix.c:174)
==8114== 
==8114== Invalid read of size 4
==8114==    at 0x400C01: main (testRadix.c:174)
==8114==  Address 0xf9fff0bffbfff588 is not stack'd, malloc'd or (recently) free'd
==8114== 
==8114== 
==8114== Process terminating with default action of signal 11 (SIGSEGV)
==8114==  General Protection Fault
==8114==    at 0x400C01: main (testRadix.c:174)
==8114== 
==8114== HEAP SUMMARY:
==8114==     in use at exit: 0 bytes in 0 blocks
==8114==   total heap usage: 1 allocs, 1 frees, 56 bytes allocated
==8114== 
==8114== All heap blocks were freed -- no leaks are possible
==8114== 
==8114== Use --track-origins=yes to see where uninitialised values come from
==8114== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==8114== 
==8114== 1 errors in context 1 of 2:
==8114== Invalid read of size 4
==8114==    at 0x400C01: main (testRadix.c:174)
==8114==  Address 0xf9fff0bffbfff588 is not stack'd, malloc'd or (recently) free'd
==8114== 
==8114== 
==8114== 1 errors in context 2 of 2:
==8114== Use of uninitialised value of size 8
==8114==    at 0x400C01: main (testRadix.c:174)
==8114== 
==8114== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
